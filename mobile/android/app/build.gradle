apply plugin: "com.android.application"
apply plugin: "org.jetbrains.kotlin.android"
apply plugin: "com.facebook.react"

/**
 * This is the configuration block to customize your React Native Android app.
 */
react {
    /* Folders */
    root = file("../")
    reactNativeDir = file("../../node_modules/react-native")
    codegenDir = file("../../node_modules/@react-native/codegen")
    cliFile = file("../../node_modules/react-native/cli.js")

    /* Variants */
    debuggableVariants = ["liteDebug", "prodDebug"]

    /* Bundling */
    bundleCommand = "ram-bundle"
    bundleInDebug = false
    bundleInRelease = true
    bundleInTest = false

    /* Hermes Commands */
    hermesCommand = "../../node_modules/react-native/sdks/hermesvm/linux64-bin/hermes"

    /* Code Push */
    bundleInStaging = true

    /* Proguard */
    enableProguardInReleaseBuilds = true
    proguardFiles = ["proguard-android-optimize.txt", "proguard-rules.pro"]

    /* Performance */
    enableSeparateBuildPerCPUArchitecture = false
    universalApk = false
}

android {
    ndkVersion rootProject.ext.ndkVersion
    compileSdk rootProject.ext.compileSdkVersion

    namespace "com.tailtracker.app"

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    kotlinOptions {
        jvmTarget = '1.8'
    }

    defaultConfig {
        applicationId "com.tailtracker.app"
        minSdkVersion rootProject.ext.minSdkVersion
        targetSdkVersion rootProject.ext.targetSdkVersion
        versionCode 1
        versionName "1.0.0"
        buildConfigField "boolean", "IS_NEW_ARCHITECTURE_ENABLED", isNewArchitectureEnabled().toString()
        
        // Multidex support
        multiDexEnabled true
        
        // Vector drawable support
        vectorDrawables.useSupportLibrary = true
        
        // Test runner
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        
        // Network security config
        networkSecurityConfig = file("src/main/res/xml/network_security_config.xml")
    }

    signingConfigs {
        debug {
            storeFile file('debug.keystore')
            storePassword 'android'
            keyAlias 'androiddebugkey'
            keyPassword 'android'
        }
        release {
            if (project.hasProperty('MYAPP_UPLOAD_STORE_FILE')) {
                storeFile file(MYAPP_UPLOAD_STORE_FILE)
                storePassword MYAPP_UPLOAD_STORE_PASSWORD
                keyAlias MYAPP_UPLOAD_KEY_ALIAS
                keyPassword MYAPP_UPLOAD_KEY_PASSWORD
            }
        }
    }

    buildTypes {
        debug {
            signingConfig signingConfigs.debug
            applicationIdSuffix ".debug"
            versionNameSuffix "-debug"
            resValue "string", "app_name", "TailTracker Debug"
            buildConfigField "String", "API_BASE_URL", '"https://api-dev.tailtracker.com"'
            buildConfigField "String", "SUPABASE_URL", '"https://your-project.supabase.co"'
            buildConfigField "String", "SUPABASE_ANON_KEY", '"your-anon-key"'
            manifestPlaceholders = [
                appName: "TailTracker Debug",
                appIcon: "@mipmap/ic_launcher_debug"
            ]
        }
        staging {
            signingConfig signingConfigs.debug
            applicationIdSuffix ".staging"
            versionNameSuffix "-staging"
            resValue "string", "app_name", "TailTracker Staging"
            buildConfigField "String", "API_BASE_URL", '"https://api-staging.tailtracker.com"'
            buildConfigField "String", "SUPABASE_URL", '"https://your-staging-project.supabase.co"'
            buildConfigField "String", "SUPABASE_ANON_KEY", '"your-staging-anon-key"'
            manifestPlaceholders = [
                appName: "TailTracker Staging",
                appIcon: "@mipmap/ic_launcher_staging"
            ]
            minifyEnabled true
            proguardFiles getDefaultProguardFile("proguard-android-optimize.txt"), "proguard-rules.pro"
        }
        release {
            signingConfig signingConfigs.release
            resValue "string", "app_name", "TailTracker"
            buildConfigField "String", "API_BASE_URL", '"https://api.tailtracker.com"'
            buildConfigField "String", "SUPABASE_URL", '"https://your-prod-project.supabase.co"'
            buildConfigField "String", "SUPABASE_ANON_KEY", '"your-prod-anon-key"'
            manifestPlaceholders = [
                appName: "TailTracker",
                appIcon: "@mipmap/ic_launcher"
            ]
            minifyEnabled true
            shrinkResources true
            proguardFiles getDefaultProguardFile("proguard-android-optimize.txt"), "proguard-rules.pro"
            
            // Bundle optimization
            crunchPngs false // Disable PNG crunching for faster builds
        }
    }

    flavorDimensions "version"
    productFlavors {
        lite {
            dimension "version"
            applicationIdSuffix ".lite"
            versionNameSuffix "-lite"
            buildConfigField "boolean", "IS_PREMIUM", "false"
        }
        premium {
            dimension "version"
            applicationIdSuffix ".premium"  
            versionNameSuffix "-premium"
            buildConfigField "boolean", "IS_PREMIUM", "true"
        }
    }

    packagingOptions {
        pickFirst "lib/x86/libc++_shared.so"
        pickFirst "lib/x86_64/libc++_shared.so"
        pickFirst "lib/arm64-v8a/libc++_shared.so"
        pickFirst "lib/armeabi-v7a/libc++_shared.so"
    }

    // Bundle configuration
    bundle {
        language {
            enableSplit = true
        }
        density {
            enableSplit = true
        }
        abi {
            enableSplit = true
        }
    }

    testOptions {
        unitTests {
            includeAndroidResources = true
        }
    }
}

dependencies {
    implementation fileTree(dir: "libs", include: ["*.jar"])

    // React Native
    implementation("com.facebook.react:react-android")
    implementation("com.facebook.react:flipper-integration")
    
    // Android core
    implementation 'androidx.core:core-ktx:1.12.0'
    implementation 'androidx.appcompat:appcompat:1.6.1'
    implementation 'androidx.activity:activity-ktx:1.8.2'
    implementation 'androidx.fragment:fragment-ktx:1.6.2'
    
    // Material Design
    implementation 'com.google.android.material:material:1.11.0'
    
    // Constraint Layout
    implementation 'androidx.constraintlayout:constraintlayout:2.1.4'
    
    // Navigation
    implementation 'androidx.navigation:navigation-fragment-ktx:2.7.6'
    implementation 'androidx.navigation:navigation-ui-ktx:2.7.6'
    
    // Lifecycle
    implementation 'androidx.lifecycle:lifecycle-viewmodel-ktx:2.7.0'
    implementation 'androidx.lifecycle:lifecycle-livedata-ktx:2.7.0'
    implementation 'androidx.lifecycle:lifecycle-runtime-ktx:2.7.0'
    
    // Google Play Services
    implementation 'com.google.android.gms:play-services-maps:18.2.0'
    implementation 'com.google.android.gms:play-services-location:21.0.1'
    implementation 'com.google.android.gms:play-services-auth:20.7.0'
    
    // Google Play Billing
    implementation 'com.android.billingclient:billing:6.1.0'
    implementation 'com.android.billingclient:billing-ktx:6.1.0'
    
    // Firebase
    implementation 'com.google.firebase:firebase-messaging:23.4.0'
    implementation 'com.google.firebase:firebase-analytics:21.5.0'
    implementation 'com.google.firebase:firebase-crashlytics:18.6.1'
    
    // Work Manager
    implementation 'androidx.work:work-runtime-ktx:2.9.0'
    
    // Room Database
    implementation 'androidx.room:room-runtime:2.6.1'
    implementation 'androidx.room:room-ktx:2.6.1'
    kapt 'androidx.room:room-compiler:2.6.1'
    
    // Networking
    implementation 'com.squareup.okhttp3:okhttp:4.12.0'
    implementation 'com.squareup.retrofit2:retrofit:2.9.0'
    implementation 'com.squareup.retrofit2:converter-gson:2.9.0'
    
    // Image loading
    implementation 'com.github.bumptech.glide:glide:4.16.0'
    
    // Permissions
    implementation 'com.karumi:dexter:6.2.3'
    
    // Multidex
    implementation 'androidx.multidex:multidex:2.0.1'
    
    // Testing
    testImplementation 'junit:junit:4.13.2'
    testImplementation 'androidx.test.ext:junit:1.1.5'
    testImplementation 'androidx.test.espresso:espresso-core:3.5.1'
    testImplementation 'org.robolectric:robolectric:4.11.1'
    testImplementation 'androidx.arch.core:core-testing:2.2.0'
    
    // Android Testing
    androidTestImplementation 'androidx.test.ext:junit:1.1.5'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.5.1'
    androidTestImplementation 'androidx.test.espresso:espresso-intents:3.5.1'
    androidTestImplementation 'androidx.test:runner:1.5.2'
    androidTestImplementation 'androidx.test:rules:1.5.0'
    
    // Debug
    debugImplementation("com.facebook.flipper:flipper:${FLIPPER_VERSION}")
    debugImplementation("com.facebook.flipper:flipper-network-plugin:${FLIPPER_VERSION}")
    debugImplementation("com.facebook.flipper:flipper-fresco-plugin:${FLIPPER_VERSION}")
    debugImplementation 'com.squareup.leakcanary:leakcanary-android:2.12'
}

// Google services plugin (must be at bottom)
apply plugin: 'com.google.gms.google-services'
apply plugin: 'com.google.firebase.crashlytics'